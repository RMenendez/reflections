1 When would you want to create a remote repository rather than keeping all your work local?

The main reason is to share the repository with other people, so they can look at it or we can work in a collaborating way.


2 Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

As with the manual vs automatic commit, with the manual pulling of changes you have more control of what you do. 

3 Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork: creates a copy of a Git repository in another Git repository. It is used to create a clone of a repository, mainly from other user, to work on it's files.
Clone: creates a copy of a git repository in a local computer, or of a local into another local. The cloning process is mainly used to make a copy on your local machine of a Git repository.
Branch: Refers to the commit sequence. It implies creating another sequence of commits (the branch) different from the master sequence. It is used to allow to keep different sequences of changes of the same program.


4 What is the benefit of having a copy of the last known state of the remote stored locally?

There is an important benefit in that it lets you have a clear picture of the changes made in master branch (in GitHub) and differentiate them from changes made locally. It can be usefull in off-line situations, where you update locally but have no way to check with GitHub. 


5 How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git and GitHub there would be the need to use intensive e-mail to announce your changes and make comments on them, and above all a lot of transfer of files. Also everybody should keep manually a group of coherent directories and files.It would be much harder to work that way.


6 When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Making changes in a separate branch is the best idea when you want to share those changes and comment on them. It complicates the process, but gives the benefits of collaboration and that the changes are not incorporated before you have had this collaboration.